def find_numbers():
    """
    Находит все числа, не превышающие 10^9, которые соответствуют маске 12345?7?8 и делятся на 23.

    Пример:
    >>> find_numbers()  # Пример числа, соответствующего маске: 123450708
    [123450708, 123451738, 123452768, 123453798, 123454828, 123455858, 123456888, 123457918, 123458948, 123459978]
    """
    import re
    pattern = re.compile(r'12345\d7\d8')
    numbers = []
    for number in range(123450708, 123459798 + 1):
        if number > 10**9:
            break
        if pattern.match(str(number)) and number % 23 == 0:
            numbers.append(number)
    return numbers

def create_table():
    """
    Создает таблицу с числами, соответствующими маске 12345?7?8, и результатами их деления на 23.

    Пример:
    >>> create_table()  # Пример таблицы для числа 123450708
    [(123450708, 5367422), (123451738, 5367466), (123452768, 5367511), (123453798, 5367556), (123454828, 5367601), (123455858, 5367646), (123456888, 5367691), (123457918, 5367736), (123458948, 5367781), (123459978, 5367826)]
    """
    numbers = find_numbers()
    table = []
    for number in sorted(numbers):
        table.append((number, number // 23))
    return table

# Запуск доктестов
if __name__ == "__main__":
    import doctest
    doctest.testmod()